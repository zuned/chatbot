<?xml  version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:jee="http://www.springframework.org/schema/jee" xmlns:lang="http://www.springframework.org/schema/lang"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
        http://www.springframework.org/schema/lang http://www.springframework.org/schema/lang/spring-lang.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />

	<context:component-scan base-package="com.hcentive.hackathon" />

	<bean id="placeholderProperties"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="file:${global.properties}"></property>
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreUnresolvablePlaceholders" value="true" />
		<property name="order" value="1" />
	</bean>

	<bean class="org.springframework.scheduling.quartz.SchedulerFactoryBean">

		<property name="schedulerContextAsMap">
			<map>
				<entry key="hostHealthManager" value-ref="hostHealthManager" />
				<entry key="monitorConfigurer" value-ref="monitorConfigurer" />
				<entry key="monitorService" value-ref="monitorService" />
				<entry key="logAnalyzer" value-ref="logAnalyzer" />
				<entry key="incidentService" value-ref="incidentService" />
				<entry key="rosterManager" value-ref="rosterManager" />
			</map>
		</property>

		<property name="triggers">
			<list>
				<ref bean="hostHealthMonitorJobTrigger" />
				<ref bean="logAnalyzerJobTrigger" />
				<ref bean="incidentNotifierJobTrigger" />
			</list>
		</property>

		<property name="quartzProperties">
			<props>
				<prop key="org.quartz.scheduler.instanceName">SystemJobScheduler</prop>
				<prop key="org.quartz.threadPool.threadCount">${quartz.threadPool.threadCount}</prop>
				<prop key="org.quartz.scheduler.skipUpdateCheck">true</prop>
				<prop key="org.quartz.plugin.jobHistory.class">org.quartz.plugins.history.LoggingTriggerHistoryPlugin
				</prop>
				<prop key="org.quartz.plugin.jobHistory.triggerCompleteMessage">|C|{0}|{2, date, dd/MM/yyyy HH:mm:ss}|{4, date,
					dd/MM/yyyy HH:mm:ss}|{3, date, dd/MM/yyyy HH:mm:ss}|{9}|
				</prop>
				<prop key="org.quartz.plugin.jobHistory.triggerFiredMessage">|S|{0}|{2, date, dd/MM/yyyy HH:mm:ss}|{4, date,
					dd/MM/yyyy HH:mm:ss}|{3, date, dd/MM/yyyy HH:mm:ss}|NA|
				</prop>
				<prop key="org.quartz.plugin.jobHistory.triggerMisfiredMessage">|M|{0}|{2, date, dd/MM/yyyy HH:mm:ss}|{4, date,
					dd/MM/yyyy HH:mm:ss}|{3, date, dd/MM/yyyy HH:mm:ss}|NA|
				</prop>
			</props>
		</property>
	</bean>

	<bean id="hostHealthMonitorJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="hostHealthMonitorJobDetail" />
		<property name="cronExpression" value="${host.health.monitor.job.cron}" />
		<property name="beanName" value="hostHealthMonitorJobTriggerBean" />
	</bean>

	<bean id="hostHealthMonitorJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.hcentive.hackathon.botmonitor.job.HostHealthMonitorJob" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="hostHealthMonitorJob" />
			</map>
		</property>
	</bean>

	<bean id="logAnalyzerJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="logAnalyzerJobDetail" />
		<property name="cronExpression" value="${app.log.analyzer.job.cron}" />
		<property name="beanName" value="logAnalyzerJobTriggerBean" />
	</bean>

	<bean id="logAnalyzerJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.hcentive.hackathon.botmonitor.job.LogAnalyzerJob" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="logAnalyzerJob" />
			</map>
		</property>
	</bean>

	<bean id="incidentNotifierJobTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
		<property name="jobDetail" ref="incidentNotifierJobDetail" />
		<property name="cronExpression" value="${incident.notifier.job.cron}" />
		<property name="beanName" value="incidentNotifierJobTriggerBean" />
	</bean>

	<bean id="incidentNotifierJobDetail" class="org.springframework.scheduling.quartz.JobDetailBean">
		<property name="jobClass"
			value="com.hcentive.hackathon.botmonitor.job.IncidentNotifierJob" />
		<property name="group" value="quartz-batch" />
		<property name="jobDataAsMap">
			<map>
				<entry key="jobName" value="incidentNotifierJob" />
			</map>
		</property>
	</bean>

</beans>